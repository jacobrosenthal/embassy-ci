name: CI

on: [pull_request]

permissions:
  pull-requests: write # Comment
  contents: write # Git notes

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.rustup/
          key: ${{ runner.os }}-rust-toolchain-${{ hashFiles('rust-toolchain.toml') }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            something-nrf52840/target/
          key: ${{ runner.os }}-cargo-something-nrf52840-${{ hashFiles('something-nrf52840/Cargo.lock') }}

      - name: install curl
        run: sudo apt-get install curl

      - name: build
        run: cargo build --release --manifest-path something-nrf52840/Cargo.toml --target thumbv7em-none-eabi

      - name: install cargo-binutils
        run: curl -L https://github.com/rust-embedded/cargo-binutils/releases/download/v0.3.6/x86_64-unknown-linux-gnu.tar.gz | tar -xz -C /usr/local/bin --strip-components=1 x86_64-unknown-linux-gnu/ --force

      - name: cargo size and set output
        id: cargo_size
        run: |
          echo "size<<EOF" >> $GITHUB_OUTPUT
          cargo size --release -q --target thumbv7em-none-eabi >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        working-directory: something-nrf52840
        continue-on-error: true

      - name: Get parent commit SHA and set output if successful
        id: get_parent_size
        run: |
          git fetch origin refs/notes/*:refs/notes/*
          echo "size<<EOF" >> $GITHUB_OUTPUT
          git notes --ref cargo-size-berkley show ${{ github.event.pull_request.base.sha }} >> $GITHUB_OUTPUT || echo '' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Create size markdown table
        id: create_table
        uses: actions/github-script@v5
        env:
          CURRENT_SIZE: ${{ steps.cargo_size.outputs.size }}
          PARENT_SIZE: ${{ steps.get_parent_size.outputs.size }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            function parseSizeBerkley(content) {
                const lines = content.split('\n');
                const headers = lines[0].split(/\s+/).filter(Boolean);
                const values = lines[1].split(/\s+/).filter(Boolean);
                return { headers, values };
            }
            console.log(process.env.PARENT_SIZE)
            console.log(process.env.CURRENT_SIZE)

            let currentSize;
            try {
                currentSize = parseSizeBerkley(process.env.CURRENT_SIZE);
            } catch (e) { core.setFailed(`Parse current size failed: ${error.message}`, typeof process.env.CURRENT_SIZE, process.env.CURRENT_SIZE); }

            let differences;
            let markdownTable = `\n| ${currentSize.headers.join(' | ')} |\n| --- | --- | --- | --- | --- | --- |\n`;

            if (process.env.PARENT_SIZE) {
                try {
                    const parentSize = parseSizeBerkley(process.env.PARENT_SIZE);
                    differences = parentSize.values.map((parentValue, index) => {
                        if (index >= 3) return " ";

                        const parsedParentValue = parseInt(parentValue, 10);
                        const parsedCurrentValue = parseInt(currentSize.values[index], 10);
                        if (isNaN(parsedParentValue) || isNaN(parsedCurrentValue)) {
                            throw new Error("Invalid integer" + `: "${parentValue} ${currentSize.values[index]}"`);
                        }
                        const diff = parsedCurrentValue - parsedParentValue
                        return diff >= 0 ? `+${diff}` : `${diff}`;
                    });
                    markdownTable += `| ${parentSize.values.join(' | ')} |\n`;
                } catch (e) {
                    // explicitly ignore errors here
                    console.log("Parent notes fetch/parsing failed. Most likely there is no Parent note to diff", e, typeof process.env.PARENT_SIZE, process.env.PARENT_SIZE)
                }
            }

            markdownTable += `| ${currentSize.values.join(' | ')} |\n`;
            if (differences) {
                markdownTable += `| ${differences.join(' | ')} |\n`;
            }
            core.setOutput('markdownTable', markdownTable);
        continue-on-error: true

      - name: Post a comment
        uses: actions/github-script@v5
        env:
          MARKDOWN_TABLE: ${{ steps.create_table.outputs.markdownTable }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: context.issue.number,
              body: process.env.MARKDOWN_TABLE
            });
        continue-on-error: true
